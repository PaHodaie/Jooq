/**
 * This class is generated by jOOQ
 */
package com.ph.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends org.jooq.impl.UpdatableRecordImpl<com.ph.jooq.tables.records.UsersRecord> implements org.jooq.Record8<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = -827490102;

	/**
	 * Setter for <code>public.users.id</code>. 
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.users.id</code>. 
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.users.age</code>. 
	 */
	public void setAge(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.users.age</code>. 
	 */
	public java.lang.Integer getAge() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.users.name</code>. 
	 */
	public void setName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.users.name</code>. 
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>public.users.city</code>. 
	 */
	public void setCity(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.users.city</code>. 
	 */
	public java.lang.String getCity() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>public.users.state</code>. 
	 */
	public void setState(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.users.state</code>. 
	 */
	public java.lang.String getState() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>public.users.streetaddress1</code>. 
	 */
	public void setStreetaddress1(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.users.streetaddress1</code>. 
	 */
	public java.lang.String getStreetaddress1() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>public.users.streetaddress2</code>. 
	 */
	public void setStreetaddress2(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.users.streetaddress2</code>. 
	 */
	public java.lang.String getStreetaddress2() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>public.users.zip</code>. 
	 */
	public void setZip(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.users.zip</code>. 
	 */
	public java.lang.String getZip() {
		return (java.lang.String) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return com.ph.jooq.tables.Users.USERS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return com.ph.jooq.tables.Users.USERS.AGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return com.ph.jooq.tables.Users.USERS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return com.ph.jooq.tables.Users.USERS.CITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.ph.jooq.tables.Users.USERS.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return com.ph.jooq.tables.Users.USERS.STREETADDRESS1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return com.ph.jooq.tables.Users.USERS.STREETADDRESS2;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return com.ph.jooq.tables.Users.USERS.ZIP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getAge();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getStreetaddress1();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getStreetaddress2();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getZip();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UsersRecord
	 */
	public UsersRecord() {
		super(com.ph.jooq.tables.Users.USERS);
	}

	/**
	 * Create a detached, initialised UsersRecord
	 */
	public UsersRecord(java.lang.Integer id, java.lang.Integer age, java.lang.String name, java.lang.String city, java.lang.String state, java.lang.String streetaddress1, java.lang.String streetaddress2, java.lang.String zip) {
		super(com.ph.jooq.tables.Users.USERS);

		setValue(0, id);
		setValue(1, age);
		setValue(2, name);
		setValue(3, city);
		setValue(4, state);
		setValue(5, streetaddress1);
		setValue(6, streetaddress2);
		setValue(7, zip);
	}
}
